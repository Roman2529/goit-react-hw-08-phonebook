{"version":3,"sources":["redux/contacts/actions.js","redux/auth/authOperation.js","redux/auth/authActions.js","components/UserMenu/UserMenu.module.css","routes.js","redux/auth/authSelectors.js","components/UserMenu/UserMenu.js","components/header/Header.js","components/routesStatus/PrivateRoute.js","components/routesStatus/PublicRoute.js","components/App.js","redux/contacts/reduser.js","redux/auth/authReduser.js","redux/store.js","index.js"],"names":["filterChange","createAction","filter","payload","alertError","addContactRequest","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","removeContactRequest","removeContactSuccess","removeContactError","axios","defaults","baseURL","token","headers","common","Authorization","addNewUser","user","dispatch","a","actions","registerRequest","post","result","data","registerSuccess","registerError","loginUser","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","currentUser","getState","getCurrentUserRequest","persistedToken","auth","get","getCurrentUserSuccess","getCurrentUserError","module","exports","path","label","exact","component","lazy","private","restricted","gotAuth","state","gettingUserName","name","connect","authSelectors","onLogoutUser","authOperations","type","onClick","className","styles","userMenu_Button","isAuth","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","to","authSelector","Component","route","render","props","App","this","isCurrentUser","fallback","Container","fluid","routes","map","key","contacts","createReducer","Actions","action","contact","combineReducers","alert","initialUserState","email","authActions","_","error","persistItems","storage","ourToken","store","configureStore","reducer","contactReducer","persistReducer","userReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"+IAAA,WAEMA,EAAeC,YAAa,yBAAyB,SAAAC,GAAM,MAAK,CACpEC,QAAS,CAAED,cAEPE,EAAaH,YAAa,uBAE1BI,EAAoBJ,YAAa,0BACjCK,EAAoBL,YAAa,0BACjCM,EAAkBN,YAAa,wBAE/BO,EAAqBP,YAAa,6BAClCQ,EAAqBR,YAAa,6BAClCS,EAAmBT,YAAa,2BAEhCU,EAAuBV,YAAa,4BACpCW,EAAuBX,YAAa,6BACpCY,EAAqBZ,YAAa,2BAEzB,KACbD,eACAI,aACAC,oBACAC,oBACAC,kBACAC,qBACAC,qBACAC,mBACAC,uBACAC,uBACAC,uB,qFC3BFC,IAAMC,SAASC,QAAU,2CAElB,IAAMC,EAAQ,SACfA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAF/CA,EAAQ,WAKjBH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IA0DnC,KAAEC,WAtDE,SAAAC,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACzBD,EAASE,IAAQC,mBADQ,kBAGFZ,IAAMa,KAAK,gBAAiBL,GAH1B,OAGjBM,EAHiB,OAIvBX,EAAUW,EAAOC,KAAKZ,OACtBM,EAASE,IAAQK,gBAAgBF,EAAOC,OALjB,gDAOvBN,EAASE,IAAQM,cAAR,OAPc,yDAAJ,uDAsDMC,UA3CX,SAAAV,GAAI,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACxBD,EAASE,IAAQQ,gBADO,kBAGDnB,IAAMa,KAAK,eAAgBL,GAH1B,OAGhBM,EAHgB,OAItBX,EAAUW,EAAOC,KAAKZ,OACtBM,EAASE,IAAQS,aAAaN,EAAOC,OALf,gDAOtBN,EAASE,IAAQU,WAAR,OAPa,yDAAJ,uDA2CkBC,OAhCzB,yDAAM,WAAMb,GAAN,SAAAC,EAAA,6DACnBD,EAASE,IAAQY,iBADE,kBAIXvB,IAAMa,KAAK,iBAJA,OAKjBV,IACAM,EAASE,IAAQa,iBANA,gDAQjBf,EAASE,IAAQc,YAAR,OARQ,yDAAN,uDAgCiCC,YApB5B,yDAAM,WAAOjB,EAAUkB,GAAjB,mBAAAjB,EAAA,yDACxBD,EAASE,IAAQiB,yBADO,EAMpBD,IADaE,EALO,EAKtBC,KAAQ3B,MALc,wDAUxBA,EAAU0B,GAVc,kBAaD7B,IAAM+B,IAAI,kBAbT,OAahBjB,EAbgB,OActBL,EAASE,IAAQqB,sBAAsBlB,IAdjB,kDAgBtBL,EAASE,IAAQsB,oBAAR,OAhBa,0DAAN,2D,+BChDpB,WAEMrB,EAAkBzB,YAAa,wBAC/B6B,EAAkB7B,YAAa,wBAC/B8B,EAAgB9B,YAAa,sBAE7BgC,EAAehC,YAAa,qBAC5BiC,EAAejC,YAAa,qBAC5BkC,EAAalC,YAAa,mBAE1BoC,EAAgBpC,YAAa,sBAC7BqC,EAAgBrC,YAAa,sBAC7BsC,EAActC,YAAa,oBAE3ByC,EAAwBzC,YAAa,8BACrC6C,EAAwB7C,YAAa,8BACrC8C,EAAsB9C,YAAa,4BAE1B,KACbyB,kBACAI,kBACAC,gBACAM,gBACAC,gBACAC,cACAN,eACAC,eACAC,aACAO,wBACAI,wBACAC,wB,mBC7BFC,EAAOC,QAAU,CAAC,gBAAkB,oC,4NCErB,GACb,CACEC,KAAM,IACNC,MAAO,OACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,SACNC,MAAO,QACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,iCACtBC,SAAS,EACTC,YAAY,GAEd,CACEN,KAAM,YACNC,MAAO,WACPC,OAAO,EACPC,UAAWC,gBAAK,kBAAM,uDACtBC,SAAS,EACTC,YAAY,I,wBC/BD,GAAEC,QAHD,SAAAC,GAAK,OAAIA,EAAMd,KAAK3B,OAGV0C,gBAFF,SAAAD,GAAK,OAAIA,EAAMd,KAAKtB,KAAKsC,O,yBCsBlCC,eAJS,SAAAH,GAAK,MAAK,CAChCE,KAAME,EAAcH,gBAAgBD,MAGE,CACtCK,aAAcC,IAAe5B,QADhByB,EAjBC,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAMG,EAAT,EAASA,aAAT,OACd,6BACE,yCAAeH,GACf,4BACEK,KAAK,SACLC,QAASH,EACTI,UAAWC,IAAOC,iBAHpB,cC4CWR,eAJS,SAAAH,GAAK,MAAK,CAChCY,OAAQR,EAAcL,QAAQC,MAGjBG,EA7CA,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OAChB,OACE,gCACE,4BACE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACrD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,aACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKf,UAAU,WACb,kBAACe,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAASC,GAAG,KAAZ,SAEDd,GACC,kBAACY,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAASC,GAAG,aAAZ,cAIN,kBAACF,EAAA,EAAD,KACGZ,EACC,kBAACY,EAAA,EAAIC,KAAL,KACE,kBAAC,EAAD,OAGF,oCACE,kBAACD,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAASC,GAAG,aAAZ,aAEF,kBAACF,EAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAASC,GAAG,UAAZ,mB,gBCnBLvB,eAJS,SAAAH,GAAK,MAAK,CAChCY,OAAQe,EAAa5B,QAAQC,MAGhBG,EAbM,SAAC,GAAD,IAAcyB,EAAd,EAAGjC,UAAsBiB,EAAzB,EAAyBA,OAAWiB,EAApC,6CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAK,OACXnB,EAAS,kBAACgB,EAAcG,GAAY,kBAAC,IAAD,CAAUL,GAAG,kBCaxCvB,eAJS,SAAAH,GAAK,MAAK,CAChCY,OAAQe,EAAa5B,QAAQC,MAGhBG,EAjBK,SAAC,GAAD,IAAcyB,EAAd,EAAGjC,UAAsBiB,EAAzB,EAAyBA,OAAWiB,EAApC,6CAClB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAC,GAAK,OACXnB,GAAUiB,EAAM/B,WACd,kBAAC,IAAD,CAAU4B,GAAG,cAEb,kBAACE,EAAcG,UCAjBC,E,kLAEFC,KAAKF,MAAMG,kB,+BAIX,OACE,kBAAC,WAAD,CAAUC,SAAU,qCAClB,kBAACC,EAAA,EAAD,CAAWC,MAAM,MACf,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACGC,EAAOC,KAAI,SAAAV,GAAK,OACfA,EAAMhC,QACJ,kBAAC,EAAD,eAAc2C,IAAKX,EAAMpC,OAAWoC,IAEpC,kBAAC,EAAD,eAAaW,IAAKX,EAAMpC,OAAWoC,e,GAhBnCD,aA+BHzB,eAJS,SAAAH,GAAK,MAAK,CAChCY,OAAQe,EAAa5B,WAGiB,CACtCmC,cAAe5B,IAAexB,aADjBqB,CAEZ6B,G,qCCpCGS,EAAWC,YAAc,IAAD,mBAC3BC,IAAQ5F,oBANG,SAACiD,EAAO4C,GAAR,mBAAuBA,EAAOnG,YAKd,cAE3BkG,IAAQ/F,mBANO,SAACoD,EAAO4C,GAAR,4BAAuB5C,GAAvB,CAA8B4C,EAAOnG,aAIzB,cAG3BkG,IAAQzF,sBANM,SAAC8C,EAAO4C,GAAR,OACf5C,EAAMxD,QAAO,SAAAqG,GAAO,OAAIA,EAAQtB,KAAOqB,EAAOnG,cAElB,IAMxBD,EAASkG,YAAc,GAAD,eACzBC,IAAQrG,cAAe,SAAC0D,EAAO4C,GAAR,OAAmBA,EAAOnG,QAAQD,WAY7CsG,cAAgB,CAAEL,WAAUjG,SAAQuG,MATrC,WAAuC,IAAtC/C,EAAqC,iGAApBO,EAAoB,EAApBA,KAAoB,EAAd9D,QACpC,OAAQ8D,GACN,KAAKoC,IAAQjG,WAAW6D,KACtB,OAAiBP,EACnB,QACE,OAAOA,M,OCpBPgD,EAAmB,CAAE9C,KAAM,KAAM+C,MAAO,MAExCrF,EAAO8E,YAAcM,GAAD,iBAAC,EACxBE,IAAY9E,iBAAkB,SAAC+E,EAAD,YAAM1G,QAAsBmB,QADnC,YAAC,EAExBsF,IAAY1E,cAAe,SAAC2E,EAAD,YAAM1G,QAAsBmB,QAFhC,YAAC,EAGxBsF,IAAY9D,uBAAwB,SAAC+D,EAAD,YAAM1G,WAHnB,YAAC,EAIxByG,IAAYtE,eAAgB,kBAAMoE,KAJX,IAOpBzF,EAAQmF,YAAc,MAAD,mBACxBQ,IAAY9E,iBAAkB,SAAC+E,EAAD,YAAM1G,QAAsBc,SADlC,cAExB2F,IAAY1E,cAAe,SAAC2E,EAAD,YAAM1G,QAAsBc,SAF/B,cAGxB2F,IAAYtE,eAAgB,kBAAM,QAHV,IAMrBwE,EAAQV,YAAc,MAAD,mBACxBQ,IAAY7E,eAAgB,SAAC8E,EAAD,YAAM1G,WADV,cAExByG,IAAYzE,YAAa,SAAC0E,EAAD,YAAM1G,WAFP,cAGxByG,IAAYrE,aAAc,SAACsE,EAAD,YAAM1G,WAHR,cAIxByG,IAAY7D,qBAAsB,SAAC8D,EAAD,YAAM1G,WAJhB,IAOZqG,cAAgB,CAC7BlF,OACAL,QACA6F,U,gBCdIC,EAAe,CACnBb,IAAK,OACLc,Q,OAASA,EACTC,SAAU,CAAC,UAGAC,EAAQC,YAAe,CAClCC,QAAS,CACP1D,MAAO2D,EACPzE,KAAM0E,YAAeP,EAAcQ,IAErCC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKnDC,EAAYC,YAAajB,GCvBtCkB,IAAS5C,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU0B,MAAOA,GACf,kBAAC,IAAD,CAAamB,QAAS,KAAMH,UAAWA,GACrC,kBAAC,EAAD,SAINI,SAASC,eAAe,W","file":"static/js/main.0da71e3b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst filterChange = createAction('contacts/filterChange', filter => ({\n  payload: { filter },\n}));\nconst alertError = createAction('contacts/alertError');\n\nconst addContactRequest = createAction('contact/ADDTASKREQUEST');\nconst addContactSuccess = createAction('contact/ADDTASKSUCCESS');\nconst addContactError = createAction('contact/ADDTASKERROR');\n\nconst getContactsRequest = createAction('contact/GETCONTACTREQUEST');\nconst getContactsSuccess = createAction('contact/GETCONTACTSUCCESS');\nconst getContactsError = createAction('contact/GETCONTACTERROR');\n\nconst removeContactRequest = createAction('contact/removeASKREQUEST');\nconst removeContactSuccess = createAction('contact/removeTASKSUCCESS');\nconst removeContactError = createAction('contact/removeTASKERROR');\n\nexport default {\n  filterChange,\n  alertError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n};\n\n\n\n\n\n","import actions from './authActions';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst addNewUser = user => async dispatch => {\r\n  dispatch(actions.registerRequest());\r\n  try {\r\n    const result = await axios.post('/users/signup', user);\r\n    token.set(result.data.token);\r\n    dispatch(actions.registerSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(actions.registerError(error));\r\n  }\r\n};\r\n\r\nconst loginUser = user => async dispatch => {\r\n  dispatch(actions.loginRequest());\r\n  try {\r\n    const result = await axios.post('/users/login', user);\r\n    token.set(result.data.token);\r\n    dispatch(actions.loginSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(actions.loginError(error));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(actions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(actions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(actions.logoutError(error));\r\n  }\r\n};\r\n\r\nconst currentUser = () => async (dispatch, getState) => {\r\n  dispatch(actions.getCurrentUserRequest());\r\n\r\n\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  try {\r\n    const result = await axios.get('/users/current');\r\n    dispatch(actions.getCurrentUserSuccess(result));\r\n  } catch (error) {\r\n    dispatch(actions.getCurrentUserError(error));\r\n  }\r\n};\r\n\r\nexport default { addNewUser, loginUser, logOut, currentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu_Button\":\"UserMenu_userMenu_Button__XutvM\"};","import { lazy } from 'react';\r\n\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./pages/HomePage.js')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./pages/RegisterPage.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./pages/LoginPage.js')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./pages/ContactsPage.js')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];","const gotAuth = state => state.auth.token;\r\nconst gettingUserName = state => state.auth.user.name;\r\n\r\nexport default { gotAuth, gettingUserName };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\nimport authOperations from '../../redux/auth/authOperation';\r\nimport styles from './UserMenu.module.css'\r\n\r\nconst UserNav = ({ name, onLogoutUser }) => (\r\n  <div>\r\n    <span>Welcome {name}</span>\r\n    <button\r\n      type=\"button\"\r\n      onClick={onLogoutUser}\r\n      className={styles.userMenu_Button}\r\n    >\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.gettingUserName(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  onLogoutUser: authOperations.logOut,\r\n})(UserNav);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport UserNav from '../UserMenu/UserMenu';\r\nimport authSelectors from '../../redux/auth/authSelectors';\r\n\r\nconst Header = ({ isAuth }) => {\r\n  return (\r\n    <header>\r\n      <ul>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">Phonebook</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link>\r\n                <NavLink to=\"/\">Home</NavLink>\r\n              </Nav.Link>\r\n              {isAuth && (\r\n                <Nav.Link>\r\n                  <NavLink to=\"/contacts\">Contacts</NavLink>\r\n                </Nav.Link>\r\n              )}\r\n            </Nav>\r\n            <Nav>\r\n              {isAuth ? (\r\n                <Nav.Link>\r\n                  <UserNav />\r\n                </Nav.Link>\r\n              ) : (\r\n                <>\r\n                  <Nav.Link>\r\n                    <NavLink to=\"/register\">Register</NavLink>\r\n                  </Nav.Link>\r\n                  <Nav.Link>\r\n                    <NavLink to=\"/login\">Login</NavLink>\r\n                  </Nav.Link>\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: authSelectors.gotAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../../redux/auth/authSelectors';\r\n\r\nconst PrivateRoute = ({ component: Component, isAuth, ...route }) => (\r\n  <Route\r\n    {...route}\r\n    render={props =>\r\n      isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: authSelector.gotAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelector from '../../redux/auth/authSelectors';\r\n\r\nconst PublicRoute = ({ component: Component, isAuth, ...route }) => (\r\n  <Route\r\n    {...route}\r\n    render={props =>\r\n      isAuth && route.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: authSelector.gotAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport routes from '../routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './header/Header';\nimport Container from 'react-bootstrap/Container';\nimport authOperations from '../redux/auth/authOperation';\nimport authSelector from '../redux/auth/authSelectors';\nimport PrivateRoute from './routesStatus/PrivateRoute';\nimport PublicRoute from './routesStatus/PublicRoute';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.isCurrentUser();\n  }\n\n  render() {\n    return (\n      <Suspense fallback={<h2>Load</h2>}>\n        <Container fluid=\"md\">\n          <div>\n            <Header />\n            <Switch>\n              {routes.map(route =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute key={route.label} {...route} />\n                ),\n              )}\n            </Switch>\n          </div>\n        </Container>\n      </Suspense>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuth: authSelector.gotAuth,\n});\n\nexport default connect(mapStateToProps, {\n  isCurrentUser: authOperations.currentUser,\n})(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport Actions from './actions';\n\nconst onSet = (state, action) => [...action.payload];\nconst onAddTask = (state, action) => [...state, action.payload];\nconst onRemove = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\n\nconst contacts = createReducer([], {\n  [Actions.getContactsSuccess]: onSet,\n  [Actions.addContactSuccess]: onAddTask,\n  [Actions.removeContactSuccess]: onRemove,\n});\n\nconst filter = createReducer('', {\n  [Actions.filterChange]: (state, action) => action.payload.filter,\n});\n\nconst alert = (state = false, { type, payload }) => {\n  switch (type) {\n    case Actions.alertError.type:\n      return (state = !state);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ contacts, filter, alert });\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactReducer from './contacts/reduser';\nimport userReduser from './auth/authReduser';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistItems = {\n  key: 'auth',\n  storage: storage,\n  ourToken: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    state: contactReducer,\n    auth: persistReducer(persistItems, userReduser),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './components/App.js';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}