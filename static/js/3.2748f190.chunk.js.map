{"version":3,"sources":["components/contactList/contactItem/contactItem.module.css","components/contactList/contactList.module.css","components/filter/filter.module.css","components/contactForm/form.module.css","components/alert/Alert.js","redux/contacts/operations.js","components/contactList/contactItem/ContactItem.js","redux/contacts/selectors.js","components/contactList/ContactList.js","components/filter/Filter.js","components/contactForm/ContactForm.js","components/generalPageContacts.js","pages/ContactsPage.js"],"names":["module","exports","Alert","className","axios","defaults","baseURL","description","dispatch","actions","addContactRequest","post","then","responce","addContactSuccess","id","data","name","catch","error","addContactError","a","getContactsRequest","get","result","keys","Object","reduce","acc","key","push","getContactsSuccess","getContactsError","removeContactRequest","delete","removeContactSuccess","removeContactError","connect","onRemoveContact","e","operations","target","number","styles","listItem","type","onClick","ContactSelectionction","state","contacts","AlertSelection","alert","FilterSelection","filter","ContactFilterSelection","contact","toLowerCase","includes","selections","listPeopleBox","TransitionGroup","list","map","CSSTransition","timeout","classNames","uuidv4","mapDispatchToProps","onfilterChange","Actions","filterChange","value","class","boxContact","boxFilter","label","placeholder","boxInput","onChange","boxSubmit","ContactForm","handleChange","formContact","nameInput","submitInput","initialState","FormContacts","setState","handleSubmit","preventDefault","errorContacts","props","find","errorItem","alertShow","onAddContacts","onAlertError","setTimeout","this","onGetContactOperation","in","appear","unmountOnExit","Form","onSubmit","Component","contactOperation","alertError","ContactsPage"],"mappings":"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","file":"static/js/3.2748f190.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactItem_listItem__2L5Gz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__10sMa\",\"enter\":\"contactList_enter__1L9E4\",\"enterActive\":\"contactList_enterActive__1anW-\",\"exit\":\"contactList_exit__3U8Vh\",\"exitActive\":\"contactList_exitActive__2lgeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"filter_contactsTitle__Q3MhP\",\"boxContact\":\"filter_boxContact__3GpeP\",\"boxFilter\":\"filter_boxFilter__rZVpn\",\"boxInput\":\"filter_boxInput__3zQ1n\",\"boxSubmit\":\"filter_boxSubmit__1PH6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxContact\":\"form_boxContact__352fJ\",\"formContact\":\"form_formContact__2pCzx\"};","import React from 'react';\n\nexport const Alert = () => {\n  return <div className=\"alert\">Choose another name!</div>;\n};\n","import actions from './actions';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst addContactOperation = description => dispatch => {\n  dispatch(actions.addContactRequest());\n  axios\n    .post('/contacts', { ...description })\n    .then(responce => {\n      dispatch(\n        actions.addContactSuccess({ ...description, id: responce.data.name }),\n      );\n    })\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst removeContactOperation = id => dispatch => {\n  dispatch(actions.removeContactRequest());\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => {\n      dispatch(actions.removeContactSuccess(id));\n    })\n    .catch(error => {\n      dispatch(actions.removeContactError(error));\n    });\n};\n\nconst getContactOperation = () => async dispatch => {\n  dispatch(actions.getContactsRequest());\n  try {\n    const result = await axios.get('/contacts');\n    const keys = Object.keys(result.data);\n    const data = keys.reduce((acc, key) => {\n      acc.push({ id: key, ...result.data[key] });\n      return acc;\n    }, []);\n    dispatch(actions.getContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.getContactsError('Error'));\n  }\n};\n\nexport default {\n  addContactOperation,\n  getContactOperation,\n  removeContactOperation,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../../redux/contacts/operations';\nimport styles from './contactItem.module.css';\n\nconst ContactItem = ({ name, number, id, onRemoveContact }) => {\n  return (\n    <>\n      <li className={styles.listItem}>\n        {name}: {number}\n        <button type=\"button\" onClick={onRemoveContact} name={id}>\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRemoveContact: e => {\n      dispatch(operations.removeContactOperation(e.target.name));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","const ContactSelectionction = state => state.contacts;\nconst AlertSelection = state => state.alert;\nconst FilterSelection = state => state.filter;\nconst ContactFilterSelection =\n  ([ContactSelectionction],\n  state =>\n    state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase()),\n    ));\nexport default {\n  ContactSelectionction,\n  AlertSelection,\n  FilterSelection,\n  ContactFilterSelection,\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactItem from './contactItem/ContactItem';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport selections from '../../redux/contacts/selectors';\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <div className={styles.listPeopleBox}>\n      <TransitionGroup className={styles.list}>\n        {contacts.map(contact => (\n          <CSSTransition key={contact.id} timeout={500} classNames={styles}>\n            <ContactItem key={uuidv4()} {...contact} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ state }) => ({\n  contacts: selections.ContactFilterSelection(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Actions from '../../redux/contacts/actions';\nimport ContactList from '../contactList/ContactList';\nimport styles from './filter.module.css';\n\nconst Fillter = ({ value, onfilterChange }) => {\n  return (\n    <div class={styles.boxContact}>\n      <form className={styles.boxFilter}>\n        <label className={styles.label}>\n          <input\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Let`s find your contact\"\n            value={value}\n            className={styles.boxInput}\n            onChange={e => {\n              onfilterChange(e.target.value);\n            }}\n          />\n        </label>\n        <button type=\"submit\" className={styles.boxSubmit}></button>\n        <ContactList />\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  onfilterChange: Actions.filterChange,\n};\n\nexport default connect(null, mapDispatchToProps)(Fillter);\n","import React from 'react';\nimport styles from './form.module.css';\n\nconst ContactForm = ({ name, number, handleChange }) => {\n  return (\n    <div className={styles.boxContact}>\n      <form className={styles.formContact}>\n        <h2>Phonebook</h2>\n        <label>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            className={styles.nameInput}\n          />\n        </label>\n        <label>\n          <p>Number</p>\n          <input\n            type=\"text\"\n            name=\"number\"\n            onChange={handleChange}\n            value={number}\n            className={styles.nameInput}\n          />\n        </label>\n        <button type=\"submit\" className={styles.submitInput}>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CSSTransition } from 'react-transition-group';\nimport Form from 'react-bootstrap/Form';\nimport { connect } from 'react-redux';\nimport { Alert } from './alert/Alert';\nimport Fillter from './filter/Filter';\nimport ContactForm from './contactForm/ContactForm';\nimport Actions from '../redux/contacts/actions';\nimport contactOperation from '../redux/contacts/operations';\nimport selections from '../redux/contacts/selectors';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nclass FormContacts extends Component {\n  state = {\n    ...initialState,\n  };\n\n  componentDidMount() {\n    this.props.onGetContactOperation();\n  }\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const errorContacts = this.props.contacts;\n\n    if (errorContacts) {\n      const error = errorContacts.map(contact => contact);\n      error.find(\n        errorItem =>\n          errorItem.name === this.state.name &&\n          errorItem.number === this.state.number,\n      )\n        ? this.alertShow()\n        : this.props.onAddContacts({ name, number });\n    }\n    this.setState({ ...initialState });\n  };\n\n  alertShow = () => {\n    this.props.onAlertError();\n    setTimeout(() => this.props.onAlertError(), 5000);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { alert } = this.props;\n    return (\n      <div>\n        {alert && (\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={2000}\n            classNames=\"alert\"\n            unmountOnExit\n          >\n            <Alert />\n          </CSSTransition>\n        )}\n        <Form onSubmit={this.handleSubmit}>\n          <ContactForm\n            handleChange={this.handleChange}\n            name={name}\n            number={number}\n          />\n        </Form>\n        <Fillter />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ state }) => {\n  return {\n    value: selections.FilterSelection(state),\n    alert: selections.AlertSelection(state),\n    contacts: selections.ContactSelectionction(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddContacts: (name, number) =>\n      dispatch(contactOperation.addContactOperation(name, number)),\n    onAlertError: () => dispatch(Actions.alertError()),\n    onGetContactOperation: () =>\n      dispatch(contactOperation.getContactOperation()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContacts);\n","import React from 'react';\nimport FormContacts from '../components/generalPageContacts';\n\nconst ContactsPage = () => {\n  return <FormContacts />;\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}